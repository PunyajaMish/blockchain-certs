{"version":3,"sources":["web3.js","components/navbar.jsx","components/form.jsx","components/certfound.jsx","components/getcert.jsx","config.js","components/certificate.jsx","App.js","serviceWorker.js","index.js","b3.jpg"],"names":["web3","Web3","givenProvider","Navhead","state","react_default","a","createElement","Navbar","className","bg","variant","expand","Brand","mb","href","Toggle","aria-controls","Collapse","id","Nav","Item","react_router_dom","to","Link","Component","Forms","handleChange","event","_this","setState","Object","defineProperty","target","name","value","addcertificate","preventDefault","props","fname","lname","course","email","_this$state","this","length","isEnabled","canBeSubmitted","style","height","background","concat","b1","backgroundSize","fontFamily","fontWeight","fontSize","color","marginBottom","Form","onSubmit","Group","Control","type","onChange","placeholder","Button","disabled","CertFound","sender","border","marginTop","borderBottom","marginLeft","details","Getcert","getcertificate","gettransaction","url","txh","window","open","console","log","isEnabledid","canBeSubmittedid","isEnabledtxh","canBeSubmittedtxh","width","yes","certfound","backgroundColor","config","eth","Contract","constant","inputs","outputs","payable","stateMutability","anonymous","indexed","Certificate","onclickprint","print","sname","onClick","App","account","output","tofound","add","data","certcontract","methods","addcert","send","from","gas","error","result","getid","call","get","getcert","alert","v","values","loadBlockchainData","getAccounts","accounts","defaultAccount","_this2","navbar","react_router","path","exact","render","components_form","component","certificate","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c54a09b9.chunk.js","sourcesContent":["import Web3 from \"web3\";\r\n\r\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\r\n\r\nexport default web3;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../nav.css\";\r\nclass Navhead extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Navbar className=\"bar\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n        <Navbar.Brand mb={0} href=\"#home\">\r\n          DigitalBlock\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Item className=\"mt-2 mr-2 \">\r\n              <Link to=\"/\">Home</Link>\r\n            </Nav.Item>\r\n            <Nav.Link href=\"#home\">Register</Nav.Link>\r\n            <Nav.Link href=\"#link\">How it works?</Nav.Link>\r\n            <Nav.Item className=\"mt-2 ml-2 mr-3\">\r\n              <Link to=\"/verify\">Verify</Link>\r\n            </Nav.Item>\r\n            <Nav.Item className=\"mt-2 mr-3\">\r\n              <Link to=\"/view\">View Certificate</Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navhead;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport b1 from \"../b3.jpg\";\r\nclass Forms extends Component {\r\n  canBeSubmitted() {\r\n    const { fname, lname, course, email } = this.state;\r\n    return (\r\n      fname.length > 0 &&\r\n      lname.length > 0 &&\r\n      course.length > 0 &&\r\n      email.length > 0\r\n    );\r\n  }\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  addcertificate = event => {\r\n    event.preventDefault();\r\n    this.props.addcertificate(this.state);\r\n    //console.log(this);\r\n  };\r\n\r\n  state = {\r\n    fname: \"\",\r\n    lname: \"\",\r\n    course: \"\",\r\n    email: \"\"\r\n  };\r\n  render() {\r\n    const isEnabled = this.canBeSubmitted();\r\n    return (\r\n      <div\r\n        className=\"container-fluid \"\r\n        style={{\r\n          height: \"100%\",\r\n          //backgroundImage: `url(${b1})`,\r\n          background: `url(${b1}) no-repeat `,\r\n          backgroundSize: \"cover\"\r\n        }}\r\n      >\r\n        <h1\r\n          style={{\r\n            fontFamily: \"Montserrat\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"60px\",\r\n            color: \"#66ffe7\"\r\n          }}\r\n          className=\"mb-5 pt-3\"\r\n        >\r\n          Create certificates on Blockchain\r\n        </h1>\r\n        <div\r\n          style={{ marginBottom: \"117px\", background: \"rgba(255,255,255,0.5)\" }}\r\n          className=\"w-50 container pt-3 pb-3 mx-auto\"\r\n        >\r\n          <h2\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Montserrat\"\r\n            }}\r\n            className=\"mb-2\"\r\n          >\r\n            Enter the Certificate details\r\n          </h2>\r\n          <Form onSubmit={this.addcertificate}>\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"fname\"\r\n                value={this.state.fname}\r\n                onChange={this.handleChange}\r\n                placeholder=\"First name\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"lname\"\r\n                value={this.state.lname}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Last name\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Email@email.com\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"course\"\r\n                value={this.state.course}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Course name\"\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              disabled={!isEnabled}\r\n              className=\"mt-3\"\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Add certificate\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Forms;\r\n","import React, { Component } from \"react\";\r\n\r\nclass CertFound extends Component {\r\n  state = { name: \"\", sender: \"\", course: \"\" };\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"container \"\r\n        style={{\r\n          fontFamily: \"Montserrat\",\r\n          background: \"#5dcbef\",\r\n          fontWeight: \"bold\",\r\n          border: \"4px solid black\",\r\n          fontSize: \"20px\",\r\n          marginTop: \"10px\"\r\n        }}\r\n      >\r\n        <div style={{ borderBottom: \" 1px solid black\" }}>\r\n          <h4>Certificate with following details found</h4>\r\n        </div>\r\n        <div>\r\n          Name:\r\n          <span\r\n            style={{ marginLeft: \"10px\", borderBottom: \" 2px solid black\" }}\r\n          >\r\n            {this.props.details[0]}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          Course:\r\n          <span\r\n            style={{ marginLeft: \"10px\", borderBottom: \" 2px solid black\" }}\r\n          >\r\n            {this.props.details[1]}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          Issued by:\r\n          <span\r\n            style={{ marginLeft: \"10px\", borderBottom: \" 2px solid black\" }}\r\n          >\r\n            {this.props.details[3]}\r\n          </span>\r\n        </div>\r\n        <div style={{ marginLeft: \"10px\", marginBottom: \"10px\" }}>\r\n          email:\r\n          <span style={{ borderBottom: \" 2px solid black\" }}>\r\n            {\" \" + this.props.details[2]}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CertFound;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport b1 from \"../b3.jpg\";\r\nimport CertFound from \"./certfound\";\r\n\r\nclass Getcert extends Component {\r\n  canBeSubmittedid() {\r\n    const id = this.state.id;\r\n    return id.length > 0;\r\n  }\r\n  canBeSubmittedtxh() {\r\n    const txh = this.state.txh;\r\n    return txh.length > 0;\r\n  }\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  getcertificate = event => {\r\n    event.preventDefault();\r\n    this.props.getcertificate(this.state);\r\n    //console.log(this);\r\n  };\r\n\r\n  gettransaction = event => {\r\n    event.preventDefault();\r\n    const url = \"https://ropsten.etherscan.io/tx/\" + this.state.txh;\r\n    window.open(url);\r\n    console.log(url);\r\n  };\r\n\r\n  state = {\r\n    id: \"\",\r\n    txh: \"\"\r\n  };\r\n  render() {\r\n    const isEnabledid = this.canBeSubmittedid();\r\n    const isEnabledtxh = this.canBeSubmittedtxh();\r\n    return (\r\n      <div\r\n        style={{\r\n          //backgroundImage: `url(${b1})`,\r\n          background: `url(${b1}) no-repeat `,\r\n          backgroundSize: \"cover\",\r\n          border: \"1px solid black\",\r\n          height: \"100%\",\r\n          width: \"100%\"\r\n        }}\r\n        className=\"container-fluid \"\r\n      >\r\n        <div className=\" mx-auto w-50\">\r\n          <h1\r\n            style={{\r\n              color: \"white\",\r\n              fontFamily: \"Montserrat\",\r\n              fontWeight: \"bold\"\r\n            }}\r\n            className=\" mt-3 mb-4\"\r\n          >\r\n            Verify the Certificate\r\n          </h1>\r\n          <Form\r\n            className=\"px-3 pt-4\"\r\n            onSubmit={this.getcertificate}\r\n            style={{ background: \"rgba(255,255,255,0.5)\" }}\r\n          >\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"id\"\r\n                value={this.state.id}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Enter Certificate ID\"\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              disabled={!isEnabledid}\r\n              className=\"mt-2 mb-3\"\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Get certificate\r\n            </Button>\r\n          </Form>\r\n          {this.props.yes ? <CertFound details={this.props.details} /> : null}\r\n\r\n          <hr\r\n            className=\"mt-5 \"\r\n            style={{ color: \"red\", backgroundColor: \"red\", height: 5 }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\" mx-auto w-50 mb-5\">\r\n          <h1\r\n            style={{\r\n              color: \"white\",\r\n              fontFamily: \"Montserrat\",\r\n              fontWeight: \"bold\"\r\n            }}\r\n            className=\"mt-5 mb-4\"\r\n          >\r\n            Verify the Transaction details\r\n          </h1>\r\n          <Form\r\n            className=\"px-3 pt-4\"\r\n            onSubmit={this.gettransaction}\r\n            style={{\r\n              marginBottom: \"57px\",\r\n              background: \"rgba(255,255,255,0.5)\"\r\n            }}\r\n          >\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"txh\"\r\n                value={this.state.txh}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Enter Transaction hash provided on Certificate\"\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              disabled={!isEnabledtxh}\r\n              className=\"mt-2 mb-3\"\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Verify\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Getcert;\r\n","import web3 from \"./web3\";\r\n\r\nexport const address = \"0x598a458f6baf4a7bc6c09007efa9902e393fce77\";\r\n\r\nexport const abi = [\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"name\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        name: \"course\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        name: \"email\",\r\n        type: \"string\"\r\n      }\r\n    ],\r\n    name: \"addcert\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"coladd\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"name\",\r\n        type: \"string\"\r\n      }\r\n    ],\r\n    name: \"addCollege\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\"\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        name: \"id\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"added\",\r\n    type: \"event\"\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"certs\",\r\n    outputs: [\r\n      {\r\n        name: \"name\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        name: \"course\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        name: \"email\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        name: \"sender\",\r\n        type: \"string\"\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: \"col\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"checkcoll\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: \"id\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"getcert\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        name: \"\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        name: \"\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        name: \"\",\r\n        type: \"string\"\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"getid\",\r\n    outputs: [\r\n      {\r\n        name: \"id\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  }\r\n];\r\n\r\nexport default new web3.eth.Contract(abi, address);\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"../certstyle.css\";\r\nimport printJs from \"print-js\";\r\n\r\nclass Certificate extends Component {\r\n  state = {};\r\n  onclickprint = event => {\r\n    event.preventDefault();\r\n    window.print();\r\n    //printJs(\"printcertificate\", \"html\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"w-100 pc \">\r\n        <div id=\"printcertificate\" className=\"w-75 cert\">\r\n          <div id=\"fname\">\r\n            <span>{this.props.sname}</span>\r\n          </div>\r\n          <div id=\"course\">\r\n            <style>{`@media print {#course{color:red;}}`}</style>\r\n            <span>{this.props.course} </span>\r\n          </div>\r\n          <div id=\"txh\">\r\n            <span>{this.props.txh}</span>\r\n          </div>\r\n          <div id=\"id\">\r\n            <span>{this.props.id}</span>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          className=\"btn\"\r\n          onClick={this.onclickprint}\r\n          variant=\"success\"\r\n          type=\"submit\"\r\n        >\r\n          Print\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Certificate;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport web3 from \"./web3.js\";\nimport \"./App.css\";\nimport Navhead from \"./components/navbar\";\nimport Forms from \"./components/form\";\nimport Getcert from \"./components/getcert\";\nimport certcontract from \"./config.js\";\nimport Certificate from \"./components/certificate\";\n\nclass App extends Component {\n  state = {\n    account: \"\",\n    name: \"\",\n    course: \"\",\n    txh: \"\",\n    id: \"\",\n    output: [],\n    tofound: false\n  };\n  componentDidMount() {\n    this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    const accounts = await web3.eth.getAccounts();\n    web3.eth.defaultAccount = accounts[0];\n    //console.log(certcontract);\n    //console.log(accounts);\n    console.log(\"acc\", accounts[0]);\n    this.setState({ account: accounts[0] });\n  }\n\n  //myevent =()=> certcontract.added();\n  //myevent=>watch((error,result)=>{\n  //  console.log(result);\n  //});\n\n  add = data => {\n    //const certificates = new this.state.web3.eth.Contract(abi, address);\n    //console.log(data.fname, data.course, data.email);\n    var name = data.fname + \" \" + data.lname;\n    certcontract.methods.addcert(name, data.course, data.email).send(\n      {\n        from: this.state.account,\n        gas: 500000\n      },\n      (error, result) => {\n        if (error) console.log(\"error \" + error);\n        else {\n          this.setState({ name: data.fname + \" \" + data.lname });\n          this.setState({ course: data.course + \" \" + \"course\" });\n          this.setState({ txh: result });\n          console.log(result);\n          certcontract.methods\n            .getid()\n            .call({ from: this.state.account }, (error, result) => {\n              this.setState({ id: result });\n              if (!error) console.log(result);\n              else console.log(error);\n            });\n          //certcontract.events.added({}, (error, ev) => {\n          //to use event below 2 lines\n          //let key = Object.keys(ev[1].returnValues)[1];\n          //console.log(ev[1].returnValues[key]);\n          //});\n        }\n      }\n    );\n  };\n  get = data => {\n    //console.log(data.id);\n    certcontract.methods\n      .getcert(data.id)\n      .call({ from: this.state.account }, (error, result) => {\n        if (!error) {\n          console.log(result);\n          const v = Object.values(result);\n          this.setState({ output: v });\n          this.setState({ tofound: true });\n          //this.history.pushState(\"certfound\");\n          console.log(this.state.output);\n        } else alert(\"Certificate not found\");\n      });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Navhead />\n          <Route\n            path=\"/\"\n            exact\n            render={() => <Forms addcertificate={this.add} />}\n          />\n          <Route\n            path=\"/verify\"\n            render={() => (\n              <Getcert\n                getcertificate={this.get}\n                yes={this.state.tofound}\n                details={this.state.output}\n              />\n            )}\n          />\n          <Route\n            path=\"/view\"\n            component={() => (\n              <Certificate\n                sname={this.state.name}\n                course={this.state.course}\n                txh={this.state.txh}\n                id={this.state.id}\n              />\n            )}\n          />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/b3.dc846958.jpg\";"],"sourceRoot":""}